{% extends 'base.html.twig' %}

{% block title %}{{ room.name }}{% endblock %}

{% block body %}
    <div class="card p-6">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">{{ room.name }}</h1>
            {% if not room.isStarted %}
                <div class="flex items-center space-x-4">
                    <div class="bg-gray-800 rounded-lg p-4">
                        <p class="text-sm">Invite Code:</p>
                        <div class="flex items-center space-x-2">
                            <code class="bg-gray-700 px-2 py-1 rounded" id="inviteCode">{{ room.inviteCode }}</code>
                            <button onclick="copyInviteLink()" class="text-purple-500 hover:text-purple-400">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>
                    {% if app.user in room.players %}
                        <button id="startGameBtn"
                                class="btn-primary px-4 py-2 rounded-lg {% if room.players|length < 2 %}opacity-50 cursor-not-allowed{% endif %}"
                                {% if room.players|length < 2 %}disabled{% endif %}>
                            Start Game
                        </button>
                    {% endif %}
                </div>
            {% endif %}
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="card p-4">
                <h2 class="text-xl font-semibold mb-4">Players</h2>
                <div id="playersList" class="space-y-2">
                    {% for player in room.players %}
                        <div class="flex items-center space-x-2 player-item">
                            <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                            <span>{{ player.nickname }}</span>
                        </div>
                    {% endfor %}
                </div>
            </div>

            {% if room.isStarted %}
                <div class="card p-4">
                    <h2 class="text-xl font-semibold mb-4">Current Theme</h2>
                    <p class="text-lg">{{ room.theme ? room.theme.question : 'No theme selected' }}</p>
                </div>
            {% endif %}
        </div>
    </div>

    <script>
        function copyInviteLink() {
            const baseUrl = window.location.origin;
            const inviteCode = document.getElementById('inviteCode').textContent;
            const inviteLink = `${baseUrl}/room/join/${inviteCode}`;

            navigator.clipboard.writeText(inviteLink).then(() => {
                alert('Invite link copied to clipboard!');
            }).catch(err => {
                console.error('Failed to copy invite link:', err);
                alert('Failed to copy invite link');
            });
        }

        // Mise à jour en temps réel des joueurs
        function updatePlayersList() {
            const playersContainer = document.getElementById('playersList');

            fetch(`/room/players/${roomId}`)
                .then(response => response.json())
                .then(players => {
                    playersContainer.innerHTML = players.map(player => `
                <div class="flex items-center space-x-2 player-item">
                    <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                    <span>${player.nickname}</span>
                </div>
            `).join('');

                    // Mettre à jour le bouton de démarrage
                    const startButton = document.getElementById('startGameBtn');
                    if (startButton) {
                        if (players.length >= 2) {
                            startButton.classList.remove('opacity-50', 'cursor-not-allowed');
                            startButton.disabled = false;
                        } else {
                            startButton.classList.add('opacity-50', 'cursor-not-allowed');
                            startButton.disabled = true;
                        }
                    }
                })
                .catch(error => console.error('Error fetching players:', error));
        }

        // Démarrage de la partie
        document.getElementById('startGameBtn')?.addEventListener('click', function() {
            if (this.disabled) return;

            fetch(`/room/start/${roomId}`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert(data.error);
                    } else {
                        window.location.reload();
                    }
                })
                .catch(error => {
                    console.error('Error starting game:', error);
                    alert('Failed to start the game');
                });
        });

        // Mettre à jour la liste des joueurs toutes les 3 secondes
        const roomId = {{ room.id }};
        setInterval(updatePlayersList, 3000);
    </script>
{% endblock %}