{% extends 'base.html.twig' %}

{% block title %}{{ room.name }}{% endblock %}

{% block body %}
    {% if is_granted('ROOM_VIEW', room) %}
        <div class="py-12 pt-28">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Room Header -->
                <div class="relative overflow-hidden rounded-2xl backdrop-blur-xl">
                    <div class="absolute inset-0 bg-gradient-to-br from-indigo-500/10 to-fuchsia-500/10"></div>
                    <div class="relative p-8">
                        <div class="flex flex-col md:flex-row justify-between items-center gap-6">
                            <div>
                                <h1 class="text-4xl font-bold text-white mb-3">{{ room.name }}</h1>
                                <div class="flex items-center gap-4 text-white/70">
                                    <div class="flex items-center gap-2">
                                        <div class="w-6 h-6 rounded-full bg-gradient-to-br from-indigo-500 to-fuchsia-500 flex items-center justify-center">
                                            <span class="text-xs font-bold text-white">{{ room.owner.nickname|first|upper }}</span>
                                        </div>
                                        <span>{{ room.owner.nickname }}</span>
                                    </div>
                                    <span class="w-1.5 h-1.5 rounded-full bg-white/20"></span>
                                    <span class="px-2 py-1 rounded-full text-xs bg-white/10">
                            {{ room.isPrivate ? 'Private' : 'Public' }} Room
                        </span>
                                </div>
                            </div>

                            {% if not room.isStarted %}
                                {% if room.isOwner(app.user) %}
                                    <button id="startGameBtn"
                                            class="group relative px-8 py-4 rounded-xl {% if room.players|length < 2 %}opacity-50 cursor-not-allowed bg-white/10{% else %}bg-gradient-to-r from-indigo-500 via-fuchsia-500 to-rose-500 hover:shadow-lg hover:shadow-white/10{% endif %} transition-all"
                                            {% if room.players|length < 2 %}disabled{% endif %}>
                                    <span class="text-white font-medium">
                                        Start Game
                                        {% if room.players|length < 2 %}
                                            <span class="block text-sm opacity-70">Need at least 2 players</span>
                                        {% endif %}
                                    </span>
                                    </button>
                                {% else %}
                                    <div class="flex items-center gap-3 text-white/70">
                                        <div class="w-5 h-5 rounded-full border-2 border-fuchsia-500 border-t-transparent animate-spin"></div>
                                        Waiting for host...
                                    </div>
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>

                <!-- Content Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-8">
                    <!-- Players List -->
                    <div class="relative rounded-2xl backdrop-blur-xl overflow-hidden">
                        <div class="absolute inset-0 bg-gradient-to-br from-indigo-500/10 to-fuchsia-500/10"></div>
                        <div class="relative p-6">
                            <div class="flex items-center justify-between mb-6">
                                <h2 class="text-2xl font-bold text-white">Players</h2>
                                <span class="px-4 py-1.5 rounded-full bg-white/10 text-white/70">
                        <span id="currentPlayersCount">{{ room.players|length }}</span> / {{ room.maxCapacity }}
                    </span>
                            </div>

                            <div id="playersList" class="space-y-3">
                                {% for player in room.players %}
                                    <div class="group flex items-center gap-4 p-4 rounded-xl bg-white/5 hover:bg-white/10 transition-all">
                                        <div class="w-10 h-10 rounded-full bg-gradient-to-br from-indigo-500 to-fuchsia-500 flex items-center justify-center">
                                            <span class="text-lg font-bold text-white">{{ player.nickname|first|upper }}</span>
                                        </div>
                                        <span class="font-medium text-white">{{ player.nickname }}</span>
                                        {% if room.isOwner(player) %}
                                            <span class="ml-auto px-3 py-1 rounded-full text-xs bg-gradient-to-r from-indigo-500 to-fuchsia-500 text-white">Host</span>
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>

                    <!-- Invite/Theme Section -->
                    <div class="relative rounded-2xl backdrop-blur-xl overflow-hidden">
                        <div class="absolute inset-0 bg-gradient-to-br from-indigo-500/10 to-fuchsia-500/10"></div>
                        <div class="relative p-6">
                            {% if not room.isStarted %}
                                <h2 class="text-2xl font-bold text-white mb-6">Invite Players</h2>
                                <div class="space-y-4">
                                    <label class="block text-sm font-medium text-white/70">Share this link</label>
                                    <div class="flex">
                                        <input type="text"
                                               id="inviteLink"
                                               readonly
                                               value="{{ url('app_room_join', {'inviteCode': room.inviteCode}) }}"
                                               class="flex-grow px-4 py-3 bg-white/5 border border-white/10 rounded-l-xl text-white focus:outline-none focus:ring-2 focus:ring-fuchsia-500"
                                        />
                                        <button onclick="copyInviteLink()"
                                                id="copyButton"
                                                class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-fuchsia-500 rounded-r-xl text-white font-medium hover:shadow-lg hover:shadow-white/10 transition-all flex items-center gap-2">
                                            <span>Copy</span>
                                            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                                <path d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            {% else %}
                                <h2 class="text-2xl font-bold text-white mb-6">Current Theme</h2>
                                <div class="p-6 rounded-xl bg-white/5 border border-white/10">
                                    <p class="text-xl text-center text-white">
                                        {{ room.theme ? room.theme.question : 'No theme selected' }}
                                    </p>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function copyInviteLink() {
                const inviteLink = document.getElementById('inviteLink');
                inviteLink.select();

                navigator.clipboard.writeText(inviteLink.value).then(() => {
                    const copyButton = document.getElementById('copyButton');
                    const originalContent = copyButton.innerHTML;

                    copyButton.innerHTML = `
                        <span class="mr-2">Copied!</span>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                        </svg>
                    `;
                    copyButton.classList.remove('bg-purple-600', 'hover:bg-purple-700');
                    copyButton.classList.add('bg-green-600', 'hover:bg-green-700');

                    setTimeout(() => {
                        copyButton.innerHTML = originalContent;
                        copyButton.classList.remove('bg-green-600', 'hover:bg-green-700');
                        copyButton.classList.add('bg-purple-600', 'hover:bg-purple-700');
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy invite link:', err);
                    alert('Failed to copy invite link');
                });
            }

            function updatePlayersList() {
                const playersContainer = document.getElementById('playersList');

                fetch(`/room/players/${roomId}`)
                    .then(response => response.json())
                    .then(players => {
                        playersContainer.innerHTML = players.map(player => `
                            <div class="group flex items-center gap-4 p-4 rounded-xl bg-white/5 hover:bg-white/10 transition-all">
                                <div class="w-10 h-10 rounded-full bg-gradient-to-br from-indigo-500 to-fuchsia-500 flex items-center justify-center">
                                    <span class="text-lg font-bold text-white">${player.nickname.charAt(0).toUpperCase()}</span>
                                </div>
                                <span class="font-medium text-white">${player.nickname}</span>
                                ${player.isOwner ? `
                                    <span class="ml-auto px-3 py-1 rounded-full text-xs bg-gradient-to-r from-indigo-500 to-fuchsia-500 text-white">Host</span>
                                ` : ''}
                            </div>
                        `).join('');

                        document.getElementById('currentPlayersCount').textContent = players.length;

                        const startButton = document.getElementById('startGameBtn');
                        if (startButton) {
                            if (players.length >= 2) {
                                startButton.classList.remove('opacity-50', 'cursor-not-allowed', 'bg-white/10');
                                startButton.classList.add('bg-gradient-to-r', 'from-indigo-500', 'via-fuchsia-500', 'to-rose-500', 'hover:shadow-lg', 'hover:shadow-white/10');
                                startButton.disabled = false;
                            } else {
                                startButton.classList.add('opacity-50', 'cursor-not-allowed', 'bg-white/10');
                                startButton.classList.remove('bg-gradient-to-r', 'from-indigo-500', 'via-fuchsia-500', 'to-rose-500', 'hover:shadow-lg', 'hover:shadow-white/10');
                                startButton.disabled = true;
                            }
                        }
                    })
                    .catch(error => console.error('Error fetching players:', error));
            }

            function checkGameState() {
                fetch(`/room/game-state/${roomId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.isStarted) {
                            window.location.href = `/room/${roomId}`;
                        }
                    })
                    .catch(error => {
                        console.error('Error checking game state:', error);
                    });
            }

            {% if not room.isOwner(app.user) and not room.isStarted %}
            const checkStateInterval = setInterval(checkGameState, 2000);
            {% endif %}

            document.getElementById('startGameBtn')?.addEventListener('click', function() {
                if (this.disabled) return;

                fetch(`/room/start/${roomId}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            alert(data.error);
                        } else {
                            window.location.href = `/room/${roomId}`;
                        }
                    })
                    .catch(error => {
                        console.error('Error starting game:', error);
                        alert('Failed to start the game');
                    });
            });

            const roomId = {{ room.id }};
            setInterval(updatePlayersList, 3000);
        </script>
    {% else %}
        <div class="text-center py-12">
            <h2 class="text-xl text-gray-400">You don't have permission to view this room.</h2>
            <a href="{{ path('app_room_index') }}" class="text-purple-400 hover:text-purple-300 mt-4 inline-block">
                Return to Rooms List
            </a>
        </div>
    {% endif %}
{% endblock %}